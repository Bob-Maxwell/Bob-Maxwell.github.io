<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Learning Notes</title>
        <link>https://Bob-Maxwell.github.io/</link>
        <description>Recent content on Learning Notes</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Jinghan Cai</copyright>
        <lastBuildDate>Fri, 31 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://Bob-Maxwell.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Introduction to robotics</title>
        <link>https://Bob-Maxwell.github.io/p/introduction-to-robotics/</link>
        <pubDate>Sun, 26 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>https://Bob-Maxwell.github.io/p/introduction-to-robotics/</guid>
        <description>&lt;img src="https://Bob-Maxwell.github.io/p/introduction-to-robotics/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg" alt="Featured image of post Introduction to robotics" /&gt;
&lt;h2 id=&#34;manipulator-kinematics&#34;&gt;Manipulator kinematics
&lt;/h2&gt;&lt;p&gt;The kinematic function of a link is to maintain a fixed relationship between the two joint axes. This relationship can be described with the link length $a$ and the twist $\alpha$. Moreover, the link offset $d$ and the joint angle $\theta$ are two parameters that may be used to describe the nature of the connection between neighboring links.&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;
  &lt;img src=&#34;two-joint-axes1.png&#34; width=&#34;48%&#34;&gt;
  &lt;img src=&#34;two-joint-axes2.png&#34; width=&#34;51%&#34;&gt;
&lt;/div&gt;
&lt;p&gt;In a word, if we abstract the two rotating pairs at the end of the connecting rod into two lines, then only four parameters are needed to characterize the transformation relationship between the two lines:&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;$a_{i-1}$ = the distance from $\hat{Z}_{i-1}$ to $\hat{Z}_i$ measured along $\hat{X}_i$;&lt;/p&gt;
&lt;p&gt;$\alpha_{i-1}$ = the angle from $\hat{Z}_{i-1}$ to $\hat{Z}_i$ measured about $\hat{X}_i$;&lt;/p&gt;
&lt;p&gt;$d_i$ = the distance from $\hat{X}_{i-1}$ to $\hat{X}_i$ measured along $\hat{Z}_i$;&lt;/p&gt;
&lt;p&gt;$\theta_i$ = the angle from $\hat{X}_{i-1}$ to $\hat{X}_i$ measured about $\hat{Z}_i$.&lt;/p&gt;
&lt;/center&gt;
&lt;div align=&#34;center&#34;&gt;
  &lt;img src=&#34;two-joint-axes3.png&#34; width=&#34;50%&#34;&gt;
  &lt;img src=&#34;two-joint-axes4.png&#34; width=&#34;49%&#34;&gt;
&lt;/div&gt;
&lt;!-- ![Link frames are attached so that frame {i} is attached to link i.](two-joint-axes3.png)![Location of intermediate frames {P}, {Q} and {R}.](two-joint-axes4.png) --&gt;
&lt;p&gt;By defining a frame for each link, we have broken the kinematics problem into $n$ subproblems. In order to solve each of these subproblems, namely $T_i^{i-1}$, we will further break each subproblem into four subsubproblems. Each of these four transformations will be a function of one link parameter only and will be simple enough that we can write down its form by inspection:&lt;/p&gt;
$$
\begin{equation*}
  \begin{aligned}
    P^{i-1} &amp;= T_i^{i-1}~ P^i \\ 
    &amp;= T_R^{i-1}~ T_Q^R~ T_P^Q~ T_i^P~ P^i \\
    &amp;= R_X(\alpha_{i-1})~ D_X(a_{i-1})~ R_Z(\theta_i)~ D_Z(d_i)~ P^i \\
    &amp;= \text{Screw}_X(a_{i-1},\alpha_{i-1})~ \text{Screw}_Z(d_i,\theta_i)~ P^i \\
    &amp;=  \begin{bmatrix}
          1&amp;0&amp;0&amp;a_{i-1}\\
          0&amp;c\alpha_{i-1}&amp;-s\alpha_{i-1}&amp;0\\
          0&amp;s\alpha_{i-1}&amp;c\alpha_{i-1}&amp;0\\
          0&amp;0&amp;0&amp;1\\
        \end{bmatrix}
        \begin{bmatrix}
          c\theta_i&amp;-s\theta_i&amp;0&amp;0\\
          s\theta_i&amp;c\theta_i&amp;0&amp;0\\
          0&amp;0&amp;1&amp;d_i\\
          0&amp;0&amp;0&amp;1\\
        \end{bmatrix}
  \end{aligned}
\end{equation*}
$$&lt;h2 id=&#34;inverse-manipulator-kinematics&#34;&gt;Inverse Manipulator kinematics
&lt;/h2&gt;&lt;!-- In this chapter, we investigate the more difficult converse problem: Given the desired position and orientation of the tool relative to the station, how do we compute the set of joint angles which will achieve this desired result? --&gt;
&lt;h2 id=&#34;jacobians-velocities-and-static-forces&#34;&gt;Jacobians: velocities and static forces
&lt;/h2&gt;&lt;h3 id=&#34;velocity-of-rigid-bodies&#34;&gt;Velocity of rigid bodies
&lt;/h3&gt;&lt;p&gt;For linear velocity, assume {$A$} be the fixed frame, {$B$} be the frame attached to a rigid body, and we wish to describe the motion of $^BQ$ relative to frame {$A$}, then&lt;/p&gt;
$$
\begin{equation*}
  \begin{aligned}
    ^AV_Q &amp;= \frac{^A\text{d}}{\text{d}t}(^AX_Q) = \frac{^A\text{d}}{\text{d}t}(^AX_B+^{B(A)}X_Q) \\
    &amp;= \frac{^A\text{d}}{\text{d}t}(^AX_B) + \frac{^B\text{d}}{\text{d}t}~ ^BX_Q R_B^A \\
    &amp;= ^AV_{BORG} + R_B^A~ ^BV_Q
  \end{aligned}
\end{equation*}
$$&lt;div align=&#34;center&#34;&gt;
  &lt;img src=&#34;linear.png&#34; width=&#34;47%&#34;&gt;
  &lt;img src=&#34;angular.png&#34; width=&#34;51%&#34;&gt;
&lt;/div&gt;
&lt;p&gt;For rotational velocity, let&amp;rsquo;s consider the vector $Q$ is constant as viewed from frame {$B$} first, then point $Q$ will have a velocity as seen from {$A$} due to the rotational velocity $^A\Omega_B$, i.e.&lt;/p&gt;
$$
  ^AV_Q = ^A\Omega_B \times ^AQ
$$&lt;p&gt;In the general case, the vector $Q$ could also be changing with respect to frame {$B$}, thus&lt;/p&gt;
$$
\begin{equation*}
  \begin{aligned}
    ^AV_Q &amp;= ^A(^BV_Q) + ^A\Omega_B \times ^AQ \\
    &amp;= R_B^A~ ^BV_Q + ^A\Omega_B \times R_B^A~ ^BQ
  \end{aligned}
\end{equation*}
$$&lt;p&gt;Consider linear and rotational velocity simultaneously, we can easily get the derivative of a vector in a moving frame as seen from a stationary frame:&lt;/p&gt;
$$
  ^AV_Q = ^AV_{BORG} + R_B^A~ ^BV_Q + ^A\Omega_B \times R_B^A~ ^BQ
$$&lt;h3 id=&#34;velocity-propagation-between-links&#34;&gt;Velocity propagation between links
&lt;/h3&gt;&lt;p&gt;The angular velocity of link $i+1$ is the same as that of link $i$ plus a new component caused by rotational velocity at joint $i+1$. This can be written in terms of frame {$i$} as&lt;/p&gt;
$$
\begin{equation*}
  \begin{aligned}
    ^i\omega_{i+1} &amp;= ^i\omega_i + R_{i+1}^i \dot{\theta}_{i+1}~ ^{i+1}\hat{Z}_{i+1} \\
    &amp;= ^i\omega_i + R_{i+1}^i~ ^{i+1}
    \begin{bmatrix}
      0\\
      0\\
      \dot{\theta}_{i+1}\\
    \end{bmatrix}
  \end{aligned}
\end{equation*}
$$&lt;p&gt;By premultiplying both sides by $R_i^{i+1}$, we can find the description of the angular velocity of link $i+1$ with respect to frame {$i+1$}:&lt;/p&gt;
$$
  ^{i+1}\omega_{i+1} = R_i^{i+1}~ ^i\omega_{i+1} = R_i^{i+1}~ ^i\omega_i + \dot{\theta}_{i+1}~ ^{i+1}\hat{Z}_{i+1}
$$&lt;div align=&#34;center&#34;&gt;
  &lt;img src=&#34;velocity1.png&#34; width=&#34;49%&#34;&gt;
  &lt;img src=&#34;velocity2.png&#34; width=&#34;50%&#34;&gt;
&lt;/div&gt;
&lt;p&gt;The linear velocity of the origin of frame {$i+1$} is the same as that of the origin of frame {$i$} plus a new component caused by rotational velocity of link $i$, so we have&lt;/p&gt;
$$
  ^iv_{i+1} = ^iv_i + ^i\omega_i \times ^iP_{i+1}
$$&lt;p&gt;Premultiplying both sides by $R_i^{i+1}$, we compute&lt;/p&gt;
$$
  ^{i+1}v_{i+1} = R_i^{i+1}~ ^iv_{i+1} = R_i^{i+1} (^iv_i + ^i\omega_i \times ^iP_{i+1})
$$&lt;p&gt;The corresponding relationships for the case that joint $i+1$ is prismatic are&lt;/p&gt;
$$
\begin{equation*}
  \begin{aligned}
    ^{i+1}\omega_{i+1} &amp;= R_i^{i+1}~ ^i\omega_i \\
    ^{i+1}v_{i+1} &amp;= R_i^{i+1} (^iv_i + ^i\omega_i \times ^iP_{i+1}) + \dot{d}_{i+1} ^{i+1}\hat{Z}_{i+1}
  \end{aligned}
\end{equation*}
$$&lt;h3 id=&#34;jacobians-and-changing-a-jacobians-frame-of-reference&#34;&gt;Jacobians and changing a Jacobian&amp;rsquo;s frame of reference
&lt;/h3&gt;&lt;p&gt;In the field of robotics, we generally use Jacobians that relate joint velocities to Cartesian velocities of the tip of the arm, for example&lt;/p&gt;
$$
  ^0\nu = \begin{bmatrix}
    ^0v\\
    ^0\omega\\
  \end{bmatrix} = ^0J(\Theta)\dot{\Theta}
$$&lt;p&gt;where $\Theta$ is the vector of joint angles of the manipulator and $\nu$ is a vector of Cartesian velocities.&lt;/p&gt;
&lt;p&gt;Given a Jacobian written in frame {$B$}, we might be interested in giving an expression ofr the Jacobian in another frame {$A$}, that is&lt;/p&gt;
$$
  ^AJ(\Theta)\dot{\Theta} = \begin{bmatrix}
      ^Av\\
      ^A\omega\\
    \end{bmatrix}
  = \begin{bmatrix}
    R_B^A &amp; 0\\
    0 &amp; R_B^A\\
  \end{bmatrix}
  \begin{bmatrix}
    ^Bv\\
    ^B\omega\\
  \end{bmatrix}
  = \begin{bmatrix}
    R_B^A &amp; 0\\
    0 &amp; R_B^A\\
  \end{bmatrix}~ ^BJ(\Theta)\dot{\Theta}
$$&lt;h3 id=&#34;static-forces-in-manipulators-and-jacobians-in-the-force-domain&#34;&gt;Static forces in manipulators and Jacobians in the force domain
&lt;/h3&gt;&lt;p&gt;We will use our usual convention for assigning frames to links. Figure below shows the static forces and moments (excluding the gravity force) acting on link $i$. Summing the forces and setting them equal to zero, we have&lt;/p&gt;
$$
  ^if_i - ^if_{i+1} = 0
$$&lt;p&gt;Summing torques about the origin of frame {$i$}, we have&lt;/p&gt;
$$
  ^in_i - ^in_{i+1} - ^iP_{i+1}\times ^if_{i+1} = 0
$$&lt;div align=&#34;center&#34;&gt;
  &lt;img src=&#34;static force-moment balance.png&#34; width=&#34;50%&#34;&gt;
&lt;/div&gt;
&lt;p&gt;To find the joint torque required to maintain the static equilibrium, the dot product of the joint-axis vector with the moment vector acting on the link is computed:&lt;/p&gt;
$$
  \tau_i = ^in_i^T~ ^i\hat{Z}_i
$$&lt;p&gt;In case that joint $i$ is prismatic, we compute the joint actuator force as&lt;/p&gt;
$$
  \tau_i = ^if_i^T~ ^i\hat{Z}_i
$$&lt;p&gt;The principle of virtual work allows us to make certain statements about the static case by allowing the amount of this displacement to go to an infinitesimal, that is&lt;/p&gt;
$$
  \tau\cdot\delta\Theta = \mathcal{F}\cdot\delta\chi
$$&lt;p&gt;where $\mathcal{F}$ is a 6$\times$1 Cartesian force-moment vector acting at the end-effector, $\delta\chi$ is a 6$\times$1 infinitesimal Cartesian displacement of the end- effector, $\tau$ is a 6$\times$1 vector of torques at the joints, and $\delta\Theta$ is a 6$\times$1 vector of infinitesimal joint displacements. Based on the definition of the Jacobian, we have&lt;/p&gt;
$$
  \tau^T\cdot\delta\Theta = \mathcal{F}^T\cdot\delta\chi = \mathcal{F}^T\cdot J\delta\Theta
$$&lt;h3 id=&#34;cartesian-transformation-of-velocities-and-static-forces&#34;&gt;Cartesian transformation of velocities and static forces
&lt;/h3&gt;&lt;p&gt;Assume the two frames here are rigidly connected, then we have the velocity transformation:&lt;/p&gt;
$$
  \begin{bmatrix}
    ^Bv_B\\
    ^B\omega_B\\
  \end{bmatrix} = \begin{bmatrix}
    R_A^B &amp; -R_A^B~ ^AP_{BORG}\times\\
    0 &amp; R_A^B\\
  \end{bmatrix}\begin{bmatrix}
    ^Av_A\\
    ^A\omega_A\\
  \end{bmatrix}
$$&lt;p&gt;we can invert this equation:&lt;/p&gt;
$$
  \begin{bmatrix}
    ^Av_A\\
    ^A\omega_A\\
  \end{bmatrix} = \begin{bmatrix}
    R_B^A &amp; ^AP_{BORG}\times R_B^A\\
    0 &amp; R_B^A\\
  \end{bmatrix}\begin{bmatrix}
    ^Bv_B\\
    ^B\omega_B\\
  \end{bmatrix}
$$&lt;p&gt;Similarly, we can write the force-moment transformation:&lt;/p&gt;
$$
  \begin{bmatrix}
    ^AF_A\\
    ^AN_A\\
  \end{bmatrix} = \begin{bmatrix}
    R_B^A &amp; 0\\
    ^AP_{BORG}\times R_B^A &amp; R_B^A\\
  \end{bmatrix}\begin{bmatrix}
    ^BF_B\\
    ^BN_B\\
  \end{bmatrix}
$$&lt;h2 id=&#34;manipulator-dynamics&#34;&gt;Manipulator dynamics
&lt;/h2&gt;</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://Bob-Maxwell.github.io/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://Bob-Maxwell.github.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>About</title>
        <link>https://Bob-Maxwell.github.io/about/</link>
        <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
        
        <guid>https://Bob-Maxwell.github.io/about/</guid>
        <description>&lt;p&gt;Written in Go, Hugo is an open source static site generator available under the &lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/blob/master/LICENSE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Apache License 2.0.&lt;/a&gt; Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.&lt;/p&gt;
&lt;p&gt;Hugo makes use of a variety of open source projects including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/yuin/goldmark&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/yuin/goldmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/alecthomas/chroma&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/alecthomas/chroma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/muesli/smartcrop&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/muesli/smartcrop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/spf13/cobra&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/spf13/cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/spf13/viper&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/spf13/viper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.&lt;/p&gt;
&lt;p&gt;Websites built with Hugo are extremely fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.&lt;/p&gt;
&lt;p&gt;Learn more and contribute on &lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
